[package]
name = "crypto-bigint"
version = "0.6.0-rc.6"
description = """
Pure Rust implementation of a big integer library which has been designed from
the ground-up for use in cryptographic applications. Provides constant-time,
no_std-friendly implementations of modern formulas using const generics.
"""
authors = ["RustCrypto Developers"]
license = "Apache-2.0 OR MIT"
repository = "https://github.com/RustCrypto/crypto-bigint"
categories = ["algorithms", "cryptography", "data-structures", "mathematics", "no-std"]
keywords = ["arbitrary", "crypto", "bignum", "integer", "precision"]
readme = "README.md"
resolver = "2"
edition = "2021"
rust-version = "1.83"

[dependencies]
subtle = { version = "2.6", default-features = false }

# optional dependencies
der = { version = "0.8.0-rc.1", optional = true, default-features = false }
hybrid-array = { version = "0.2", optional = true }
num-traits = { version = "0.2.19", default-features = false }
rand_core = { version = "0.6.4", optional = true }
rlp = { version = "0.6", optional = true, default-features = false }
serdect = { version = "0.3", optional = true, default-features = false }
zeroize = { version = "1", optional = true, default-features = false }

[target.'cfg(all(target_os = "zkvm", target_arch = "riscv32"))'.dependencies]
getrandom = { version = "0.2", features = ["custom"] }
powdr-riscv-runtime = { git = "https://github.com/powdr-labs/powdr.git"}

[dev-dependencies]
bincode = "1"
hex-literal = "0.4"
num-bigint = "0.4"
num-integer = "0.1"
num-modular = { version = "0.6", features = ["num-bigint", "num-integer", "num-traits"] }
rand_core = { version = "0.6", features = ["alloc"] }
rand_chacha = "0.3"

[target.'cfg(not(all(target_os = "zkvm", target_arch = "riscv32")))'.dev-dependencies]
criterion = { version = "0.4", features = ["html_reports"] }
proptest = "1.5"

[target.'cfg(all(target_os = "zkvm", target_arch = "riscv32"))'.dev-dependencies]
proptest = { version = "1.5", default-features = false, features = ["alloc"] }

[features]
default = ["rand"]
alloc = ["serdect?/alloc"]

extra-sizes = []
rand = ["rand_core/std"]
serde = ["dep:serdect"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[[bench]]
name = "boxed_monty"
harness = false
required-features = ["alloc"]

[[bench]]
name = "boxed_uint"
harness = false
required-features = ["alloc"]

[[bench]]
name = "const_monty"
harness = false

[[bench]]
name = "limb"
harness = false

[[bench]]
name = "monty"
harness = false

[[bench]]
name = "uint"
harness = false

[[bench]]
name = "int"
harness = false
